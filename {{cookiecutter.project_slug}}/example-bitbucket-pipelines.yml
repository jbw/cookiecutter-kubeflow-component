clone:
  depth: full # needed by sonarqube

definitions:
  services:
    docker:
      memory: 3072

  steps:
    - step: &Test
        caches:
          - pip
        name: Test
        image: python:3.8.6
        script:
          - pip install -r requirements.txt
          - pip install -r test_requirements.txt
          - mkdir test-results
          - chmod +x ./ci/coverage.sh
          - ./ci/coverage.sh
          - cp ${BITBUCKET_CLONE_DIR}/unit-tests-coverage.xml test-results/
        artifacts:
          - unit-tests-coverage.xml
          - test-results/**

    - step: &SonarCov
        name: SonarCloud Coverage
        caches:
          - docker
        script:
          - pipe: sonarsource/sonarcloud-scan:1.2.0
            variables:
              EXTRA_ARGS: "-Dsonar.sources=example -Dsonar.python.coverage.reportPaths=test-results/*coverage.xml -Dsonar.exclusions=example/components/**/tests/**/*,ci/**"

    - step: &SonarQualityGate
        name: SonarCloud Quality Gate
        caches:
          - docker
        script:
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.4

    - step: &Style
        caches:
          - pip
        name: Style check
        image: python:3.8.6
        script:
          - pip install -r requirements.txt
          - pip install -r test_requirements.txt
          - black --line-length 170 -t py38 --check --diff .

    - step: &Lint
        caches:
          - pip
        name: Lint check
        image: python:3.8.6
        script:
          - pip install -r requirements.txt
          - pip install -r test_requirements.txt
          - pylint example

    - step: &BuildPipeline
        name: Build pipeline
        image: python:3.8.6
        caches:
          - pip
        script:
          - pip install -r requirements.txt
          - pip install -r pipeline/requirements.txt
          - export BITBUCKET_COMMIT_SHORT="${BITBUCKET_COMMIT::7}"
          - chmod +x ./ci/deploy-pipeline/update-component-image-tag.sh
          - ./ci/deploy-pipeline/update-component-image-tag.sh ${BITBUCKET_COMMIT_SHORT} example/components/trainer/component.yml
          - ./ci/deploy-pipeline/update-component-image-tag.sh ${BITBUCKET_COMMIT_SHORT} example/components/preprocessor/component.yml
          - ./ci/deploy-pipeline/update-component-image-tag.sh ${BITBUCKET_COMMIT_SHORT} example/components/train_test_split/component.yml
          - ./ci/deploy-pipeline/update-component-image-tag.sh ${BITBUCKET_COMMIT_SHORT} example/components/validation/component.yml
          - ./ci/deploy-pipeline/update-component-image-tag.sh ${BITBUCKET_COMMIT_SHORT} example/components/predictor/component.yml
          - python pipeline/pipeline.py
        artifacts:
          - .experiments/**

    - step: &BuildDist
        name: Build dist
        image: python:3.8.6
        caches:
          - pip
        artifacts:
          - pip-packages/**
        script:
          - mkdir pip-packages && cd pip-packages
          - pip download -r ../requirements.txt

    - step: &BuildTrainTest
        name: Build train test split image
        image: python:3.8.6
        caches:
          - pip
          - docker
        services:
          - docker
        script:
          - chmod +x ./ci/build.sh
          - ./ci/build.sh example/components/train_test_split/Dockerfile . eu.gcr.io/fip-project/ia/prototype/train-test-split

    - step: &BuildTrainer
        name: Build trainer image
        image: python:3.8.6
        caches:
          - pip
          - docker
        services:
          - docker
        script:
          - chmod +x ./ci/build.sh
          - ./ci/build.sh example/components/trainer/Dockerfile . eu.gcr.io/fip-project/ia/prototype/trainer-starter-sample

    - step: &BuildPreprocessor
        name: Build preprocesor image
        image: python:3.8.6
        caches:
          - pip
          - docker
        services:
          - docker
        script:
          - chmod +x ./ci/build.sh
          - ./ci/build.sh example/components/preprocessor/Dockerfile . eu.gcr.io/fip-project/ia/prototype/preprocessor-starter-sample

    - step: &BuildModelValidation
        name: Build model validation image
        image: python:3.8.6
        caches:
          - pip
          - docker
        services:
          - docker
        script:
          - chmod +x ./ci/build.sh
          - ./ci/build.sh example/components/validation/Dockerfile . eu.gcr.io/fip-project/ia/prototype/model-validation-starter

    - step: &BuildPredictor
        name: Build model predictor image
        image: python:3.8.6
        caches:
          - pip
          - docker
        services:
          - docker
        script:
          - chmod +x ./ci/build.sh
          - ./ci/build.sh example/components/predictor/Dockerfile . eu.gcr.io/fip-project/ia/prototype/predictor-starter

    - step: &PushComponents
        name: Push Kubeflow components to S3
        image: amazon/aws-cli:2.0.6
        script:
          - export BITBUCKET_COMMIT_SHORT="${BITBUCKET_COMMIT::7}"
          - export COMPONENT_VERSION=`echo $BITBUCKET_BRANCH-$BITBUCKET_BUILD_NUMBER-$BITBUCKET_COMMIT_SHORT | tr / -`
          - aws s3 cp example/components/trainer/component.yml s3://caspian-kubeflow-components/examples/trainer-example-${COMPONENT_VERSION}.yml
          - aws s3 cp example/components/preprocessor/component.yml s3://caspian-kubeflow-components/examples/preprocessor-example-${COMPONENT_VERSION}.yml
          - aws s3 cp example/components/train_test_split/component.yml s3://caspian-kubeflow-components/examples/train-test-split-example-${COMPONENT_VERSION}.yml
          - aws s3 cp example/components/validation/component.yml s3://caspian-kubeflow-components/examples/model-validation-example-${COMPONENT_VERSION}.yml
          - aws s3 cp example/components/predictor/component.yml s3://caspian-kubeflow-components/examples/predictor-example-${COMPONENT_VERSION}.yml
          
    - step: &PushKfPipeline
        name: Push Kubeflow pipeline to S3
        image: amazon/aws-cli:2.0.6
        script:
          - export BITBUCKET_COMMIT_SHORT="${BITBUCKET_COMMIT::7}"
          - export PIPELINE_VERSION=`echo $BITBUCKET_BRANCH-$BITBUCKET_BUILD_NUMBER-$BITBUCKET_COMMIT_SHORT | tr / -`
          - aws s3 cp .experiments/pipeline/pipeline.tar.gz s3://caspian-kubeflow-components/examples/pipelines/example-starter-project-pipeline-${PIPELINE_VERSION}.tar.gz

pipelines:
  pull-requests:
    "**":
      - parallel:
          - step: *Test
          - step: *Style
          - step: *Lint
      - step: *SonarCov
      - step: *SonarQualityGate
      - step: *PushComponents
      - step: *BuildPipeline
      - step: *PushKfPipeline

  branches:
    master:
      - parallel:
          - step: *Test
          - step: *Style
          - step: *Lint
      - step: *SonarCov
      - step: *SonarQualityGate
      - step: *BuildPipeline
      - step: *BuildDist
      - parallel:
          - step: *BuildTrainTest
          - step: *BuildModelValidation
          - step: *BuildPreprocessor
          - step: *BuildTrainer
          - step: *BuildPredictor
      - step: *PushComponents
      - step: *PushKfPipeline

